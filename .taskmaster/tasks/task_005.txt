# Task ID: 5
# Title: Implement TCP/IP Connection for Modbus RTU
# Status: in-progress
# Dependencies: 1, 3
# Priority: medium
# Description: Create functionality to connect to Modbus devices over TCP/IP using Modbus RTU protocol
# Details:
Implement a service to handle TCP/IP connections for Modbus RTU over TCP. Create UI components for IP address and port configuration. Add connect/disconnect functionality for TCP connections. Implement error handling for connection failures. The implementation should encapsulate Modbus RTU frames within TCP packets:

```javascript
async function connectToModbusTCP(ipAddress, port) {
  try {
    // Using WebSockets as a way to handle TCP in browser environment
    const socket = new WebSocket(`ws://${ipAddress}:${port}`);
    
    socket.onopen = () => {
      // Connection established
      tcpConnected = true;
      updateConnectionStatus();
    };
    
    socket.onmessage = (event) => {
      // Process incoming Modbus RTU over TCP data
      const data = new Uint8Array(event.data);
      processModbusRTUPacket(data);
    };
    
    socket.onclose = () => {
      tcpConnected = false;
      updateConnectionStatus();
    };
    
    socket.onerror = (error) => {
      console.error('TCP connection error:', error);
      // Show error to user
    };
    
    tcpSocket = socket;
  } catch (error) {
    console.error('Error connecting to TCP/IP:', error);
    // Show error to user
  }
}
```

# Test Strategy:
Test connection to Modbus TCP devices. Verify that connection settings are applied correctly. Test error handling when connection fails. Verify that the UI updates appropriately when connection status changes. Test sending and receiving Modbus RTU packets over TCP.
